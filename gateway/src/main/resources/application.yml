# ?? ??
server:
  port: 80  # ??????? ??? ?? ??

# Eureka ??
eureka:
  instance:
    hostname: j11a604.p.ssafy.io
  client:
    register-with-eureka: true  # Eureka ??? ?? ??
    fetch-registry: true  # Eureka ???? ??? ??? ??? ???? ??
    service-url:
      defaultZone: http://j11a604.p.ssafy.io:8761/eureka # Eureka ??? ?? URL (??? ?? URL? ???? ?)

# Spring ?????? ??
spring:
  application:
    name: gateway  # ??????? ?? ??

  # Spring Cloud Gateway ??
  cloud:
    gateway:
      #      밑에 두줄은 JWT 적용되면 풀기
      #      default-filters:
      #        - name: JwtFilter
      #        #          하단 부분은 JwtFilter에 들어가기전에 JwtFilter가 사용하는 Config 내부 클래스에 변수를 설정할 때 사용
      #        #          args:
      #        #            baseMessage: Spring Cloud Gateway Global Filter
      #        #            preLogger: true
      #        #            postLogger: true
      #        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials

      globalcors:
        cors-configurations:
          '[/**]': # 모든 경로에 대한 CORS 설정
            allowedOrigins: '*'  # 허용하는 출처
            allow-credentials: false  # 인증 정보 허용
            allowedHeaders: '*'  # 허용하는 헤더
            allowedMethods: # 허용하는 HTTP 메서드
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes: # ??? ?? ??아
        - id: chatbotRoute
          uri: lb://CHATBOT
          predicates:
            - Path=/api/chatbot/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: chatbotRoute
          uri: lb://CHATBOT
          predicates:
            - Path=/api/chatbot/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: notificationRoute
          #          uri: http://j11a604.p.ssafy.io:8083
          uri: lb://NOTIFICATION
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: paymentRoute
          uri: lb://PAYMENT
          predicates:
            - Path=/api/payments/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: travelRoute
          uri: lb://TRAVEL
          predicates:
            - Path=/api/travel/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: userRoute
          uri: lb://USER
          predicates:
            - Path=/api/user/**


#      globalcors:
#        cors-configurations:
#          "[/**]":
#            allow-credentials: true
#            allowed-origins:
#              - "*"
#            allowed-headers:
#              - Authorization
#              - Authorization-refresh
#            allowed-methods:
#              - PUT
#              - GET
#              - POST
#              - DELETE
#              - PATCH
#              - OPTIONS         # 없애고 확인해보기





logging:
  level:
    root: info # 전체 로그 레벨을 info 설정


