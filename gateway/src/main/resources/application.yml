server:
  port: 80  # 서버 포트 설정

# Eureka 설정
eureka:
  instance:
    hostname: j11a604.p.ssafy.io
  client:
    register-with-eureka: true  # Eureka에 등록 여부
    fetch-registry: true  # Eureka 서버에서 레지스트리 정보 가져오기
    service-url:
      defaultZone:  # Eureka 서버 URL

# Spring 애플리케이션 설정
spring:
  application:
    name: gateway  # 애플리케이션 이름 설정

  # Spring Cloud Gateway 설정
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 모든 경로에 대한 CORS 설정
            allowedOrigins: '*'  # 허용하는 출처
            allow-credentials: false  # 인증 정보 허용
            allowedHeaders: '*'  # 허용하는 헤더
            allowedMethods: # 허용하는 HTTP 메서드
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS

      routes: # 라우트 설정
        # JwtFilter가 적용되는 라우트
        - id: accountRoute
          uri: lb://ACCOUNT
          predicates:
            - Path=/api/accounts/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: chatbotRoute
          uri: lb://CHATBOT
          predicates:
            - Path=/api/chatbot/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: notificationRoute
          uri: lb://NOTIFICATION
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: paymentRoute
          uri: lb://PAYMENT
          predicates:
            - Path=/api/payments/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: travelRoute
          uri: lb://TRAVEL
          predicates:
            - Path=/api/travel/**
          filters:
            - name: JwtFilter  # JwtFilter를 이 라우트에 적용

        - id: userRoute
          uri: lb://USER
          predicates:
            - Path=/api/user/**  # JwtFilter가 적용되지 않음
          # 필터를 명시적으로 설정하지 않으면 JwtFilter가 적용되지 않음
